{
  "swagger": "2.0",
  "info": {
    "description": "\n# Introduction\n\nWelcome to the UnificationEngine® Telegram API! You can use our API to access UnificationEngine® API endpoints, which can communicate with Telegram.\n",
    "version": "v2",
    "title": "Telegram"
  },
  "host": "apiv2.unificationengine.com",
  "basePath": "/v2",
  "tags": [
    {
      "name": "Connection",
      "description": "Add Connection"
    },
    {
      "name": "Send messages",
      "description": "Messaging using UnificationEngine®"
    },
    {
      "name": "Media retrieve",
      "description": "Retrieve media using UnificationEngine®"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/connection/add": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "Add connection.",
        "description": "This endpoint will add a connection to the user of the application. A connection is an authenticated instance of a connector. A connector, which has to be added in the developer portal, is a bridge between the  service and the application. A service can be anything like WhatsApp, Facebook Messenger, Telegram etc. The uri parameter part for this api call consists of three parts: \n\n* Connector identifier (scheme of uri) \n* Service access token \n* Service domain name\n\nThe \"name\" parameter is used to identify the connection for the user, which is required for the further api calls using this connection. Once a connection is successfully added, it can be identified by using the \"name\" as \"unified://name\". The name should not contain any spaces and slashes. This api call should be authenticated with the key and secret of the user.\n\n# Add connection uri details\n\n__The params has to be appended as query string at the end of uri.__\n\\\nWhile adding a connection, the uri parts like service access token, secret and query parameter values should be encoded in the application.\n\\\nThe uri parts decoding should be handled in the connector for each api request.\n\\\n**The command to add a Telegram connection is**\n\n    curl -XPOST https://apiv2.unificationengine.com/v2/connection/add -u USER_ACCESSKEY:USER_ACCESSSECRET --data '{\"uri\":\"telegram://TELEGRAM_USER_ID@telegram.com\",\"name\":\"UNIQUE_CONNECTION_IDENTIFIER\"}' -k\n    \n<br>\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent, which will be  there in the webhook ‘receiveraddress’",
            "required": true,
            "schema": {
              "$ref": "#/definitions/none"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_1"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#text": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message Text",
        "description": "This endpoint will send a text message to Telegram Services. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is body.\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __MESSAGE_BODY__: The message to be sent <br> __MESSAGE_BODY_SIZE__: The size of the MESSAGE_BODY <br> __CONTENT_TYPE__: Supported Content-Types are text/plain and text/html",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageText"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#image": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Image",
        "description": "This endpoint will send an  Image to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is image_link.\n\\\nThe contentType's that are supported by UE are listed below\n\n1. image/jpg\n2. image/png\n3. image/gif\n\nAny contentType  which is not supported by UE will be treated as **binary** and UE will send the contentType as received to the connector.\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __IMAGE_LINK__:  The image link to be sent for eg: https://uibai.s3.eu-central-1.amazonaws.com/1603517259386 <br> __IMAGE_LINK_SIZE__: The character length of the image link to be sent <br> __CONTENT_TYPE__: Supported Content-Types are image/jpeg and image/png <br> __FILE_NAME__: The name to be displayed for the file ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageImage"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#imagewithtext": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Image  with text",
        "description": "This endpoint will send an image with text  message to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is body and image_link.\n\\\nThe contentType's that are supported by UE are listed below\n1. text/plain\n2. text/html\n3. image/jpg\n4. image/png\n5. image/gif\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __IMAGE_LINK__:  The image link to be sent for eg: https://uibai.s3.eu-central-1.amazonaws.com/1603517259386 <br> __IMAGE_LINK_SIZE__: The character length of the image link to be sent <br> __CONTENT_TYPE__: Supported Content-Types are text/plain, text/html, image/jpeg and image/png <br> __FILE_NAME__: The name to be displayed for the file <br> __MESSAGE_BODY__: The message to be sent <br> __MESSAGE_BODY_SIZE__: The size of the MESSAGE_BODY",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageImagewithtext"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#document": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Document",
        "description": "This endpoint will send an image with text  message to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application.  \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is file.\n\\\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __DOCUMENT_LINK__:  The document link to be sent for eg: http://www.africau.edu/images/default/sample.pdf <br> __DOCUMENT_LINK_SIZE__: The character length of the document link to be sent <br> __CONTENT_TYPE__: Supported Content-Types application/pdf, application/msword, application/vnd.ms-powerpoint, application/vnd.ms-excel, text/plain <br> __FILE_NAME__: The name to be displayed for the file ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageDocument"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#audio": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Audio",
        "description": "This endpoint will send an image with text  message to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is audio_link.\n\\\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __AUDIO_LINK__:  The audio link to be sent for eg: http://file-examples.com/wp-content/uploads/2017/11/file_example_MP3_700KB.mp3 <br> __AUDIO_LINK_SIZE__: The character length of the audio link to be sent <br> __CONTENT_TYPE__: Supported Content-Types audio/acc, audio/mp4, audio/amr, audio/mpeg, audio/ogg; codecs=opus Note: The base audio/ogg type is not supported.<br> __FILE_NAME__: The name to be displayed for the file ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageAudio"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#video": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Video",
        "description": "This endpoint will send an image with text  message to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is video_link.\n\\\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __VIDEO_LINK__:  The video link to be sent for eg: http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4 <br> __VIDEO_LINK_SIZE__: The character length of the video link to be sent <br> __CONTENT_TYPE__: Supported Content-Types video/mp4 Note: Only H.264 video codec and AAC audio codec is supported.<br> __FILE_NAME__: The name to be displayed for the file ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageVideo"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#link": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Link",
        "description": "This endpoint will send an image with text message to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application.\n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is link.\n\\\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __LINK__:  The link to be sent for eg: https://www.youtube.com/watch?v=C0DPdy98e4c <br> __LINK_SIZE__: The character length of the link to be sent <br> __CONTENT_TYPE__: Supported Content-Types is text/plain ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageLink"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#location": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Location",
        "description": "This endpoint will send an image with text message to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application.\n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is location.\n\\\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __MESSAGE_BODY_SIZE__: The character length of the data to be sent <br> __LONGITUDE__: Longitude of the location <br> __LATITUDE__: Latitude of the location <br> __LOCATION_NAME__: Name of the location <br> __LOCATION_ADDRESS__: Address of the location. Only displayed if a name is present. <br> ",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageLocation"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#replybutton": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - ReplyButton",
        "description": "This endpoint will send a ReplyButton message to service. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is body, list_picker/button , header and footer.\n\\\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __TELEGRAM_USER_ID__: The user id to which the message has to be sent <br> __BUTTON_TITLE__: Button title <br> __BUTTON_PAYLOAD__: Button payload, This will be the text that will be triggered when button is clicked. <br> __MESSAGE_BODY_SIZE__: The character length of the data to be sent.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sendMessageReplyButton"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/retrieve": {
      "post": {
        "tags": [
          "Media retrieve"
        ],
        "summary": "Retrieve media data",
        "description": "This endpoint will retrieve the media data from the service.\n\nFor retrieving a single message, the user should fetch the messages and save thde details in application db or local storage for further use.\n  \\\nFor saving message details, following parameters should be passed in api uri - unified://CONNECTION_IDENTIFIER/FOLDER_NAME header - true and entriesperpage\n  \\\nFor fetching single message the uri param as follows unified://CONNECTION_IDENTIFIER/FOLDER_NAME/ MESSAGE_ID\n\ncontentType in response will be according to the media.\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "__UNIQUE_CONNECTION_IDENTIFIER__: Connection name <br> __MEDIA_ID__:  Id of the media retrieved in the webhook <br> __MESSAGE_ID__: Id of the webhook message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/retrieveMessage"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/retrieveMessageResponse"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "userAuth": {
      "description": "# User Authentication\n\nUse **User accesskey** as *Username* and **User Secret** as *Password*\n",
      "type": "basic"
    }
  },
  "definitions": {
    "sendMessageText": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "0",
              "contentType": "text/plain",
              "data": "MESSAGE_BODY",
              "size": "MESSAGE_BODY_SIZE",
              "type": "body",
              "sort": 1
            }
          ]
        }
      }
    },
    "sendMessageImage": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "0",
              "contentType": "CONTENT_TYPE",
              "size": "IMAGE_LINK_SIZE",
              "type": "image_link",
              "name": "FILE_NAME",
              "data": "IMAGE_LINK",
              "sort": 1
            }
          ]
        }
      }
    },
    "sendMessageImagewithtext": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageImagewithtext_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "1",
              "contentType": "text/plain",
              "size": 50,
              "type": "image_link",
              "name": "file name",
              "data": "https://uibai.s3.eu-central-1.amazonaws.com/1603517259386",
              "sort": 0
            },
            {
              "id": "1",
              "contentType": "text/plain",
              "data": "test",
              "size": 4,
              "type": "body",
              "sort": 1
            }
          ]
        }
      }
    },
    "sendMessageDocument": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "1",
              "contentType": "CONTENT_TYPE",
              "data": "DOCUMENT_LINK",
              "name": "FILE_NAME",
              "size": 2500,
              "type": "file",
              "sort": 0
            }
          ]
        }
      }
    },
    "sendMessageAudio": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "1",
              "contentType": "CONTENT_TYPE",
              "data": "AUDIO_LINK",
              "size": 2500,
              "name": "FILE_NAME",
              "type": "audio_link",
              "sort": 0
            }
          ]
        }
      }
    },
    "sendMessageVideo": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "0",
              "contentType": "CONTENT_TYPE",
              "data": "VIDEO_LINK",
              "size": "VIDEO_LINK_SIZE",
              "type": "video_link",
              "sort": 1
            }
          ]
        }
      }
    },
    "sendMessageLink": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "0",
              "contentType": "text/plain",
              "data": "LINK",
              "size": "LINK_SIZE",
              "type": "link",
              "sort": 1
            }
          ]
        }
      }
    },
    "sendMessageLocation": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "1",
              "contentType": "application/json",
              "data": "{ \"longitude\": LONGITUDE, \"latitude\": LATITUDE, \"name\": \"LOCATION_NAME\", \"address\": \"LOCATION_ADDRESS\"}",
              "size": 100,
              "type": "location",
              "sort": 0
            }
          ]
        }
      }
    },
    "sendMessageReplyButton": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageImagewithtext_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "TELEGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "subject": "",
          "parts": [
            {
              "id": "1",
              "contentType": "text/html",
              "data": "test",
              "size": 1000,
              "type": "body",
              "sort": 0
            },
            {
              "id": "2",
              "contentType": "text/plain",
              "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
              "size": 1000,
              "type": "quickreply",
              "sort": 1
            },
            {
              "id": "3",
              "contentType": "text/plain",
              "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
              "size": 1000,
              "type": "quickreply",
              "sort": 2
            },
            {
              "id": "4",
              "contentType": "text/plain",
              "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
              "size": 1000,
              "type": "quickreply",
              "sort": 3
            }
          ]
        }
      }
    },
    "retrieveMessage": {
      "type": "object",
      "required": [
        "uri"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "example": "unified://UNIQUE_CONNECTION_IDENTIFIER?messageId=MESSAGE_ID&mediaId=MEDIA_ID"
        }
      }
    },
    "retrieveMessageResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        },
        "messages": {
          "type": "object",
          "example": {
              "UNIQUE_CONNECTION_IDENTIFIER": [{
                  "uri": "",
                  "mid": "",
                  "timestamp": 0,
                  "sender": {
                    "connector": "",
                    "address": "",
                    "uri": ""
                  },
                  "returnPath": {
                    "connector": "",
                    "address": "",
                    "uri": ""
                  },
                  "receivers": null,
                  "date": 0,
                  "userAgent": "",
                  "headers": null,
                  "parts": [{
                      "id": "0",
                      "contentType": "CONTENT_TYPE",
                      "type": "body",
                      "name": "FILE_NAME",
                      "data": "BASE64_DATA",
                      "size": 1000,
                      "sort": 0
                    }
                  ]
                }
              ]
          },
          "description": "Messages description"
        }
      }
    },
    "successMessage": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        }
      }
    },
    "inline_response_200": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        },
        "uri": {
          "type": "string",
          "example": "user://USER_ACCESSKEY:USER_ACCESSSECRET",
          "description": "User details"
        }
      }
    },
    "none": {
      "type": "object",
      "required": [
        "name",
        "uri"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "example": "telegram://TELEGRAM_USER_ID@telegram.com"
        },
        "name": {
          "type": "string",
          "example": "UNIQUE_CONNECTION_IDENTIFIER"
        }
      }
    },
    "inline_response_200_1": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        }
      }
    },
    "inline_response_200_2": {
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/inline_response_200_2_status"
        },
        "URIs": {
          "type": "array",
          "description": "Send list",
          "items": {
            "type": "string",
            "example": "telegram://telegram.com/gBEGkYYGSIiAAgnzWjuGCt_OmyE"
          }
        }
      }
    },
    "sendMessageText_message_receivers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "Connector": {
          "type": "string"
        }
      }
    },
    "sendMessageText_message_parts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sort": {
          "type": "number"
        }
      }
    },
    "sendMessageText_message": {
      "type": "object",
      "properties": {
        "receivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_receivers"
          }
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_parts"
          }
        }
      }
    },
    "sendMessageImagewithtext_message": {
      "type": "object",
      "properties": {
        "receivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_receivers"
          }
        },
        "subject": {
          "type": "string"
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_parts"
          }
        }
      }
    },
    "inline_response_200_2_status_UNIQUE_CONNECTION_IDENTIFIER": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "200",
          "description": "status"
        },
        "info": {
          "type": "string",
          "example": "OK",
          "description": "staus"
        }
      }
    },
    "inline_response_200_2_status": {
      "type": "object",
      "properties": {
        "UNIQUE_CONNECTION_IDENTIFIER": {
          "$ref": "#/definitions/inline_response_200_2_status_UNIQUE_CONNECTION_IDENTIFIER"
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Authentication required!"
    },
    "successMessage": {
      "description": "A User object",
      "schema": {
        "$ref": "#/definitions/successMessage"
      }
    },
    "retrieveMessage": {
      "description": "Api Success",
      "schema": {
        "$ref": "#/definitions/retrieveMessageResponse"
      }
    }
  }
}