{
    "swagger": "2.0",
    "info": {
      "description": "\n# Introduction\n\nWelcome to the UnificationEngine® Microsoft Teams API! You can use our API to access UnificationEngine® API endpoints, which can communicate with Microsoft Teams.\n",
      "version": "v2",
      "title": "Microsoft Teams"
    },
    "host": "apiv2.unificationengine.com",
    "basePath": "/v2",
    "tags": [
      {
        "name": "Connection",
        "description": "Add Connection"
      },
      {
        "name": "Send messages",
        "description": "Messaging using UnificationEngine®"
      }
    ],
    "schemes": [
      "https"
    ],
    "paths": {
      "/connection/add": {
        "post": {
          "tags": [
            "Connection"
          ],
          "summary": "Add connection.",
          "description": "This endpoint will add a connection to the user of the application. A connection is an authenticated instance of a connector. A connector, which has to be added in the developer portal, is a bridge between the service and the application. The uri parameter part for this api call consists of three parts: \n\n* Connector identifier (scheme of uri) \n* Service access token \n* Service domain name\n\nThe \"name\" parameter is used to identify the connection for the user, which is required for the further api calls using this connection. Once a connection is successfully added, it can be identified by using the \"name\" as \"unified://name\". The name should not contain any spaces and slashes. This api call should be authenticated with the key and secret of the user.\n# Add connection uri details\n\n__The params has to be appended as query string at the end of uri.__\n\\\nWhile adding a connection, the uri parts like service access token, secret and query parameter values should be encoded in the application.\n\\\nThe uri parts decoding should be handled in the connector for each api request.\n\\\n**The command to add a Microsoft Teams connection is**\n\n    curl -XPOST https://apiv2.unificationengine.com/v2/connection/add -u ACCESS-KEY:ACCESS-SECRET --data '{\"uri\":\"microsoftteams://FROM_ID@microsoft.com?service_url=SERVICE_URL&recipient_id=FROM_ID&recipient_name=FROM_NAME&from_id=RECIPIENT_ID&from_name=RECIPIENT_NAME&conversation_id=CONVERSATION_ID\",\"name\":\"UNIQUE_CONNECTION_IDENTIFIER\"}' -k\n    \n<br>\n\n`Remember — the API requires authentication!`\n",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "__UNIQUE_CONNECTION_IDENTIFIER__ : Connection name, you can give a unique name for each connection. <br> __FROM_ID__: FROM_ID is the encodeURIComponent of from->id in the original event <br> __FROM_NAME__ : FROM_NAME is the encodeURIComponent of from->name in the original event <br> __SERVICE_URL__ : SERVICE_URL is the encodeURIComponent of serviceUrl in the original event <br> __RECIPIENT_ID__ : RECIPIENT_ID is the encodeURIComponent of recipient->id in the original event <br> __RECIPIENT_NAME__ : RECIPIENT_NAME is the encodeURIComponent of recipient>name in the original event  <br> __CONVERSATION_ID__ : CONVERSATION_ID is the encodeURIComponent of conversation->id in the original event",
              "required": true,
              "schema": {
                "$ref": "#/definitions/connectionAdd"
              }
            }
          ],
          "security": [
            {
              "userAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Api Success",
              "schema": {
                "$ref": "#/definitions/connectionAddResponse"
              }
            },
            "401": {
              "description": "Authentication required!"
            }
          }
        }
      },
      "/message/send#text": {
        "post": {
          "tags": [
            "Send messages"
          ],
          "summary": "Send Message Text",
          "description": "This endpoint will send a text message to Microsoft Teams Services. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application.\n\nTo send a new message \"RECEIVER_ADDRESS\", \"UNIQUE_CONNECTION_IDENTIFIER\", \"MESSAGE_BODY\" and \"MESSAGE_BODY_SIZE\" has to be changed.\n\\\nThe \"**type**\" available in message parts is body.\n",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __RECEIVER_ADDRESS__: The value of the “receiveraddress” in the webhook payload can be used here. <br> __MESSAGE_BODY__: The message to be sent <br> __MESSAGE_BODY_SIZE__: The size of the MESSAGE_BODY <br> __CONTENT_TYPE__: Supported Content-Types are text/plain and text/html",
              "required": true,
              "schema": {
                "$ref": "#/definitions/sendMessageText"
              }
            }
          ],
          "security": [
            {
              "userAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Api Success",
              "schema": {
                "$ref": "#/definitions/sendMessageResponse"
              }
            },
            "401": {
              "description": "Authentication required!"
            }
          }
        }
      },
      "/message/send#image": {
        "post": {
          "tags": [
            "Send messages"
          ],
          "summary": "Send Message - Image",
          "description": "This endpoint will send an  Image to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is image_link.\n\\\nThe contentType's that are supported by UE are listed below\n\n1. image/jpg\n2. image/png\n\nAny contentType  which is not supported by UE will be treated as **binary** and UE will send the contentType as received to the connector.\nTo send image \"RECEIVER_ADDRESS\", \"UNIQUE_CONNECTION_IDENTIFIER\", “CONTENT_TYPE”, \"IMAGE_LINK\" , \"IMAGE_LINK_SIZE\" has to be changed.\n`Remember — the API requires authentication!`\n",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __RECEIVER_ADDRESS__: The value of the “receiveraddress” in the webhook payload can be used here. <br> __IMAGE_LINK__:  The image link to be sent for eg: https://uibai.s3.eu-central-1.amazonaws.com/1603517259386 <br> __IMAGE_LINK_SIZE__: The character length of the image link to be sent <br> __CONTENT_TYPE__: Supported Content-Types are image/jpeg and image/png <br> __FILE_NAME__: The name to be displayed for the file ",
              "required": true,
              "schema": {
                "$ref": "#/definitions/sendMessageImage"
              }
            }
          ],
          "security": [
            {
              "userAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Api Success",
              "schema": {
                "$ref": "#/definitions/sendMessageResponse"
              }
            },
            "401": {
              "description": "Authentication required!"
            }
          }
        }
      },
      "/message/send#button": {
        "post": {
          "tags": [
            "Send messages"
          ],
          "summary": "Send Message - Button",
          "description": "This endpoint will send a Button message to service. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is button/postback.\n\\\nTo send a new message \"RECEIVER_ADDRESS\", \"UNIQUE_CONNECTION_IDENTIFIER\", \"MESSAGE_BODY\", \"BUTTON_TITLE\", \"BUTTON_PAYLOAD\" and \"MESSAGE_BODY_SIZE\" has to be changed.\n`Remember — the API requires authentication!`\n",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __RECEIVER_ADDRESS__: The value of the “receiveraddress” in the webhook payload can be used here. <br> __MESSAGE_BODY__: The message to be sent <br> __BUTTON_TITLE__: Button title <br> __BUTTON_PAYLOAD__: Button payload, This will be the text that will be triggered when button is clicked. <br> __MESSAGE_BODY_SIZE__: The character length of the data to be sent.",
              "required": true,
              "schema": {
                "$ref": "#/definitions/sendMessageButton"
              }
            }
          ],
          "security": [
            {
              "userAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Api Success",
              "schema": {
                "$ref": "#/definitions/sendMessageResponse"
              }
            },
            "401": {
              "description": "Authentication required!"
            }
          }
        }
      },
      "/message/send#carousel": {
          "post": {
            "tags": [
              "Send messages"
            ],
            "summary": "Send Message - Carousel",
            "description": "This endpoint will send a Carousel message to service. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is generic/elements.\n\\\nTo send a new message \"RECEIVER_ADDRESS\", \"UNIQUE_CONNECTION_IDENTIFIER\", \"CAROUSEL_TITLE\", \"CAROUSEL_SUBTITLE\", \"CAROUSEL_CONTENT\", \"IMAGE_URL\", \"BUTTON_TITLE\", \"BUTTON_PAYLOAD\" and \"MESSAGE_BODY_SIZE\" has to be changed.\n`Remember — the API requires authentication!`\n",
            "parameters": [
              {
                "in": "body",
                "name": "body",
                "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __RECEIVER_ADDRESS__: The value of the “receiveraddress” in the webhook payload can be used here. <br> __CAROUSEL_TITLE__: Carousel title   <br> __MESSAGE_BODY__: The message to be sent  <br> __CAROUSEL_SUBTITLE__: Carousel subtitle <br> __CAROUSEL_CONTENT__: Carousel content <br> __IMAGE_URL__: Image url <br> __BUTTON_TITLE__: Button title <br> __BUTTON_PAYLOAD__: Button payload, This will be the text that will be triggered when button is clicked. <br> __MESSAGE_BODY_SIZE__: The character length of the data to be sent.",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/sendMessageCarousel"
                }
              }
            ],
            "security": [
              {
                "userAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Api Success",
                "schema": {
                  "$ref": "#/definitions/sendMessageResponse"
                }
              },
              "401": {
                "description": "Authentication required!"
              }
            }
          }
      },
      "/message/send#herocard": {
          "post": {
            "tags": [
              "Send messages"
            ],
            "summary": "Send Message - Hero Card",
            "description": "This endpoint will send a Card message to service. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is card/hero.\n\\\nTo send a new message \"RECEIVER_ADDRESS\", \"UNIQUE_CONNECTION_IDENTIFIER\", \"CARD_TITLE\", \"CARD_SUBTITLE\", \"CARD_CONTENT\", \"IMAGE_URL\", \"BUTTON_TITLE\", \"BUTTON_PAYLOAD\" and \"MESSAGE_BODY_SIZE\" has to be changed.\n\\\nIf “IMAGE_URL” is not given the card, it will display 5 buttons in one tile. If “IMAGE_URL” is given, 3 buttons  will display  in one tile and remaining buttons will display in the next tile as a carousel.\n`Remember — the API requires authentication!`\n",
            "parameters": [
              {
                "in": "body",
                "name": "body",
                "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __RECEIVER_ADDRESS__: The value of the “receiveraddress” in the webhook payload can be used here. <br> __CARD_TITLE__: Card title <br> __CARD_SUBTITLE__: Card subtititle<br> __CARD_CONTENT__: Card content <br> __IMAGE_URL__: Image url <br> __BUTTON_TITLE__: Button title <br> __BUTTON_PAYLOAD__: Button payload, This will be the text that will be triggered when button is clicked. <br> __MESSAGE_BODY_SIZE__: The character length of the data to be sent.",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/sendMessageHeroCard"
                }
              }
            ],
            "security": [
              {
                "userAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Api Success",
                "schema": {
                  "$ref": "#/definitions/sendMessageResponse"
                }
              },
              "401": {
                "description": "Authentication required!"
              }
            }
          }
      },
      "/message/send#thumbnailcard": {
          "post": {
            "tags": [
              "Send messages"
            ],
            "summary": "Send Message - Thumbnail Card",
            "description": "This endpoint will send a Thumbnail Card to service. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is card/thumbnail.\n\\\nTo send a new message \"RECEIVER_ADDRESS\", \"UNIQUE_CONNECTION_IDENTIFIER\", \"CARD_TITLE\", \"CARD_SUBTITLE\", \"CARD_CONTENT\", \"IMAGE_URL\", \"BUTTON_TITLE\", \"BUTTON_PAYLOAD\" and \"MESSAGE_BODY_SIZE\" has to be changed.\n\\\nThe thumb nail card will display a maximum of 6 buttons in a tile. If there are more than 6 buttons, the tile will not show the excess buttons.\n`Remember — the API requires authentication!`\n",
            "parameters": [
              {
                "in": "body",
                "name": "body",
                "description": "__UNIQUE_CONNECTION_IDENTIFIER__ :Connection name <br> __RECEIVER_ADDRESS__: The value of the “receiveraddress” in the webhook payload can be used here. <br> __CARD_TITLE__: Card title <br> __CARD_SUBTITLE__: Card subtititle<br> __CARD_CONTENT__: Card content <br> __IMAGE_URL__: Image url <br> __BUTTON_TITLE__: Button title <br> __BUTTON_PAYLOAD__: Button payload, This will be the text that will be triggered when button is clicked. <br> __MESSAGE_BODY_SIZE__: The character length of the data to be sent.",
                "required": true,
                "schema": {
                  "$ref": "#/definitions/sendMessageThumbnailCard"
                }
              }
            ],
            "security": [
              {
                "userAuth": []
              }
            ],
            "responses": {
              "200": {
                "description": "Api Success",
                "schema": {
                  "$ref": "#/definitions/sendMessageResponse"
                }
              },
              "401": {
                "description": "Authentication required!"
              }
            }
          }
      }
    },
    "securityDefinitions": {
      "userAuth": {
        "description": "# User Authentication\n\nUse **User accesskey** as *Username* and **User Secret** as *Password*\n",
        "type": "basic"
      }
    },
    "definitions": {
      "sendMessageText": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "$ref": "#/definitions/sendMessage"
          }
        },
        "example": {
          "message": {
            "sender": {
              "address": "test"
            },
            "receivers": [
              {
                "name": "Me",
                "address": "RECEIVER_ADDRESS",
                "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
              }
            ],
            "parts": [
              {
                "id": "0",
                "contentType": "CONTENT_TYPE",
                "data": "MESSAGE_BODY",
                "size": "MESSAGE_BODY_SIZE",
                "type": "body",
                "sort": 1
              }
            ]
          }
        }
      },
      "sendMessageImage": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "$ref": "#/definitions/sendMessage"
          }
        },
        "example": {
          "message": {
            "sender": {
              "address": "test"
            },
            "receivers": [
              {
                "name": "Me",
                "address": "RECEIVER_ADDRESS",
                "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
              }
            ],
            "parts": [
              {
                "id": "0",
                "contentType": "CONTENT_TYPE",
                "size": "IMAGE_LINK_SIZE",
                "type": "image_link",
                "name": "FILE_NAME",
                "data": "IMAGE_LINK",
                "sort": 1
              }
            ]
          }
        }
      },
      "sendMessageButton": {
          "type": "object",
          "required": [
              "message"
          ],
          "properties": {
              "message": {
                  "$ref": "#/definitions/sendMessage"
              }
          },
          "example": {
              "message": {
              "sender": {
                  "address": "test"
              },
              "receivers": [
                  {
                  "name": "Me",
                  "address": "RECEIVER_ADDRESS",
                  "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
                  }
              ],
              "subject": "",
              "parts": [
                  {
                  "id": "1",
                  "contentType": "text/plain",
                  "data": "MESSAGE_BODY",
                  "size": "MESSAGE_BODY_SIZE",
                  "type": "body",
                  "sort": 0
                  },
                  {
                  "id": "2",
                  "contentType": "text/plain",
                  "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
                  "size": "MESSAGE_BODY_SIZE",
                  "type": "button/postback",
                  "sort": 1
                  },
                  {
                  "id": "3",
                  "contentType": "text/plain",
                  "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
                  "size": "MESSAGE_BODY_SIZE",
                  "type": "button/postback",
                  "sort": 2
                  },
                  {
                  "id": "4",
                  "contentType": "text/plain",
                  "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
                  "size": "MESSAGE_BODY_SIZE",
                  "type": "button/postback",
                  "sort": 3
                  }
              ]
              }
          }
      },
      "sendMessageCarousel": {
          "type": "object",
          "required": [
              "message"
          ],
          "properties": {
              "message": {
                  "$ref": "#/definitions/sendMessage"
              }
          },
          "example": {
              "message": {
              "sender": {
                  "address": "test"
              },
              "receivers": [
                  {
                  "name": "Me",
                  "address": "RECEIVER_ADDRESS",
                  "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
                  }
              ],
              "subject": "",
              "parts": [
                {
                  "id": "1",
                  "contentType": "text/plain",
                  "data": "MESSAGE_BODY",
                  "size": "MESSAGE_BODY_SIZE",
                  "type": "body",
                  "sort": 0
                },
                {
                  "id": "2",
                  "contentType": "text/plain",
                  "data": "{\"title\":\"CAROUSEL_TITLE\", \"subtitle\":\"CAROUSEL_SUBTILE\", \"text\":\"CAROUSEL_CONTENT\",\"image_url\":\"IMAGE_URL\",\"default_action\": {\"type\": \"web_url\",\"url\": \"WEB_URL\"},\"buttons\":[{\"type\":\"web_url\",\"url\":\"WEB_URL\",\"title\":\"WEB_URL_TITILE\"},{\"type\":\"postback\",\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}]}",
                  "size": "MESSAGE_BODY_SIZE",
                  "type": "generic/elements",
                  "sort": 1
                },
                {
                  "id": "3",
                  "contentType": "text/plain",
                  "data": "{\"title\":\"CAROUSEL_TITLE\", \"subtitle\":\"CAROUSEL_SUBTILE\", \"text\":\"CAROUSEL_CONTENT\",\"image_url\":\"IMAGE_URL\",\"default_action\": {\"type\": \"web_url\",\"url\": \"WEB_URL\"},\"buttons\":[{\"type\":\"web_url\",\"url\":\"WEB_URL\",\"title\":\"WEB_URL_TITILE\"},{\"type\":\"postback\",\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}]}",
                  "size": "MESSAGE_BODY_SIZE",
                  "type": "generic/elements",
                  "sort": 2
                },
                {
                    "id":"4",
                    "contentType":"text/plain",
                    "data":"{\"title\":\"CAROUSEL_TITLE\", \"subtitle\":\"CAROUSEL_SUBTILE\", \"text\":\"CAROUSEL_CONTENT\",\"image_url\":\"IMAGE_URL\",\"default_action\": {\"type\": \"web_url\",\"url\": \"WEB_URL\"},\"buttons\":[{\"type\":\"web_url\",\"url\":\"WEB_URL\",\"title\":\"WEB_URL_TITILE\"},{\"type\":\"postback\",\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}]}",
                    "size":"MESSAGE_BODY_SIZE",
                    "type":"generic/elements",
                    "sort":3
                }
              ]
              }
          }
      },
      "sendMessageHeroCard": {
          "type": "object",
          "required": [
              "message"
          ],
          "properties": {
              "message": {
                  "$ref": "#/definitions/sendMessage"
              }
          },
          "example": {
              "message": {
              "sender": {
                  "address": "test"
              },
              "receivers": [
                  {
                  "name": "Me",
                  "address": "RECEIVER_ADDRESS",
                  "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
                  }
              ],
              "subject": "",
              "parts": [
                {
                    "id":"1",
                    "contentType":"text/plain",
                    "data":"MESSAGE_BODY",
                    "size":"MESSAGE_BODY_SIZE",
                    "type":"body",
                    "sort":0
                },
                {
                    "id":"2",
                    "contentType":"text/plain",
                    "data":"{\"title\":\"CARD_TITLE\", \"subtitle\":\"CARD_SUBTILE\", \"text\":\"CARD_CONTENT\",\"image_url\":\"IMAGE_URL\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"WEB_URL\",\"title\":\"WEB_URL_TITILE\"},{\"type\":\"postback\",\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}],  \"default_action\": {\"type\": \"web_url\",\"url\":\"WEB_URL\"}}",
                    "size":"MESSAGE_BODY_SIZE",
                    "type":"card/hero",
                    "sort":1
                }
              ]
              }
          }
      },
      "sendMessageThumbnailCard": {
          "type": "object",
          "required": [
              "message"
          ],
          "properties": {
              "message": {
                  "$ref": "#/definitions/sendMessage"
              }
          },
          "example": {
              "message": {
              "sender": {
                  "address": "test"
              },
              "receivers": [
                  {
                  "name": "Me",
                  "address": "RECEIVER_ADDRESS",
                  "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
                  }
              ],
              "subject": "",
              "parts": [
                {
                    "id":"1",
                    "contentType":"text/plain",
                    "data":"MESSAGE_BODY",
                    "size":"MESSAGE_BODY_SIZE",
                    "type":"body",
                    "sort":0
                },
                {
                    "id":"2",
                    "contentType":"text/plain",
                    "data":"{\"title\":\"CARD_TITLE\", \"subtitle\":\"CARD_SUBTILE\", \"text\":\"CARD_CONTENT\",\"image_url\":\"IMAGE_URL\",\"buttons\":[{\"type\":\"web_url\",\"url\":\"WEB_URL\",\"title\":\"WEB_URL_TITILE\"},{\"type\":\"postback\",\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}],  \"default_action\": {\"type\": \"web_url\",\"url\":\"WEB_URL\"}}",
                    "size":"MESSAGE_BODY_SIZE",
                    "type":"card/thumbnail",
                    "sort":1
                }
              ]
              }
          }
      },
      "successMessage": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200,
            "description": "Status of Api"
          },
          "info": {
            "type": "string",
            "example": "200 OK",
            "description": "Info about status"
          }
        }
      },
      "connectionAdd": {
        "type": "object",
        "required": [
          "name",
          "uri"
        ],
        "properties": {
          "uri": {
            "type": "string",
            "example": "microsoftteams://FROM_ID@microsoft.com?service_url=SERVICE_URL&recipient_id=FROM_ID&recipient_name=FROM_NAME&from_id=RECIPIENT_ID&from_name=RECIPIENT_NAME&conversation_id=CONVERSATION_ID"
          },
          "name": {
            "type": "string",
            "example": "UNIQUE_CONNECTION_IDENTIFIER"
          }
        }
      },
      "connectionAddResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 200,
            "description": "Status of Api"
          },
          "info": {
            "type": "string",
            "example": "200 OK",
            "description": "Info about status"
          }
        }
      },
      "sendMessageResponse": {
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/definitions/sendMessageResponseStatus"
          },
          "URIs": {
            "type": "array",
            "description": "Send list",
            "items": {
              "type": "string",
              "example": "microsoftteams://microsoft.com/gBEGkYYGSIiAAgnzWjuGCt_OmyE"
            }
          }
        }
      },
      "sendMessage_receivers": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "Connector": {
            "type": "string"
          }
        }
      },
      "sendMessage_message_parts": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          }
        }
      },
      "sendMessage": {
        "type": "object",
        "properties": {
          "receivers": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/sendMessage_receivers"
            }
          },
          "parts": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/sendMessage_message_parts"
            }
          }
        }
      },
      "sendMessageResponseStatus_UNIQUE_CONNECTION_IDENTIFIER": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "200",
            "description": "status"
          },
          "info": {
            "type": "string",
            "example": "OK",
            "description": "staus"
          }
        }
      },
      "sendMessageResponseStatus": {
        "type": "object",
        "properties": {
          "UNIQUE_CONNECTION_IDENTIFIER": {
            "$ref": "#/definitions/sendMessageResponseStatus_UNIQUE_CONNECTION_IDENTIFIER"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication required!"
      },
      "successMessage": {
        "description": "A User object",
        "schema": {
          "$ref": "#/definitions/successMessage"
        }
      }
    }
  }