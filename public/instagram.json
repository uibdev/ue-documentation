{
  "swagger": "2.0",
  "info": {
    "description": "\n# Introduction\n\nWelcome to the UnificationEngine® instagram API! You can use our API to access UnificationEngine® API endpoints, which can communicate with instagram.\n",
    "version": "v2",
    "title": "Instagram"
  },
  "host": "beta-apiv2.unificationengine.com",
  "basePath": "/v2",
  "tags": [
    {
      "name": "Connection",
      "description": "Add Connection"
    },
    {
      "name": "Send messages",
      "description": "Messaging using UnificationEngine®"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/connection/add": {
      "post": {
        "tags": [
          "Connection"
        ],
        "summary": "Add connection.",
        "description": "This endpoint will add a connection to the user of the application. A connection is an authenticated instance of a connector. A connector, which has to be added in the developer portal, is a bridge between the service and the application. A service can be anything like WhatsApp, Facebook Messenger, Telegram etc. The uri parameter part for this api call consists of three parts: \n\n* Connector identifier (scheme of uri) \n* Service access token \n* Service domain name\n\nThe \"name\" parameter is used to identify the connection for the user, which is required for the further api calls using this connection. Once a connection is successfully added, it can be identified by using the \"name\" as \"unified://name\". The name should not contain any spaces and slashes. This api call should be authenticated with the key and secret of the user.\n\n# Add connection uri details\n\n__If the \"connectionname\" in webhook is empty you can get attachment->uri and  replace  “URI” in the below command.__\n\\\nWhile adding a connection, the uri parts like service access token, secret and query parameter values should be encoded in the application.\n\\\nThe uri parts decoding should be handled in the connector for each api request.\n\\\n**The command to add a instagram connection is**\n\n    curl -XPOST  https://apiv2.unificationengine.com/v2/connection/add -u ACCESS-KEY:ACCESS-SECRET --data '{\"uri\":\"URI\",\"name\":\"UNIQUE_CONNECTION_IDENTIFIER\"}' -k\n    \n\nOnce  the __URI__ is replaced it will be as below\n\n    curl -XPOST  https://apiv2.unificationengine.com/v2/connection/add -u ACCESS-KEY:ACCESS-SECRET --data '{\"uri\":\"instagram://UNIQUE_UNIQUE_INSTAGRAM_USER_ID@instagram.com?isDirectMsg=true\",\"name\":\"UNIQUE_CONNECTION_IDENTIFIER\"}' -k\n\nThe UNIQUE_UNIQUE_INSTAGRAM_USER_ID is the Instagram user id  to which the application has to send a message, which will be there in the webhook  ‘receiveraddress’\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "none",
            "description": "none",
            "required": false,
            "schema": {
              "$ref": "#/definitions/none"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_1"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#text": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message Text",
        "description": "This endpoint will send a text message to instagram Services. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\nPlease note that a message can be sent via API, only if the user has communicated to the Instagram bot in the last __24 hours__.\n\n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is body.\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "none",
            "description": "none",
            "required": false,
            "schema": {
              "$ref": "#/definitions/sendMessageText"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#image": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Image",
        "description": "This endpoint will send an  Image to service. The contentType in the ‘part' parameter should be one of the connector capabilities, which can be seen when adding the connector to your application. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is image_link.\n\\\nThe contentType's that are supported by UE are listed below\n\n1. image/jpg\n2. image/png\n\nAny contentType  which is not supported by UE will be treated as **binary** and UE will send the contentType as received to the connector.\n\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "none",
            "description": "none",
            "required": false,
            "schema": {
              "$ref": "#/definitions/sendMessageImage"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    },
    "/message/send#button": {
      "post": {
        "tags": [
          "Send messages"
        ],
        "summary": "Send Message - Button",
        "description": "This endpoint will send a Button message to service. \n\\\nThis api call should be authenticated with the key and secret of the user.\n\\\nThe \"**type**\" available in message parts is body, quickreply , header and footer.\n\\\n`Remember — the API requires authentication!`\n",
        "parameters": [
          {
            "in": "body",
            "name": "none",
            "description": "none",
            "required": false,
            "schema": {
              "$ref": "#/definitions/sendMessageButton"
            }
          }
        ],
        "security": [
          {
            "userAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Api Success",
            "schema": {
              "$ref": "#/definitions/inline_response_200_2"
            }
          },
          "401": {
            "description": "Authentication required!"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "userAuth": {
      "description": "# User Authentication\n\nUse **User accesskey** as *Username* and **User Secret** as *Password*\n",
      "type": "basic"
    }
  },
  "definitions": {
    "sendMessageText": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "UNIQUE_INSTAGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "0",
              "contentType": "text/plain",
              "data": "test",
              "size": 4,
              "type": "body",
              "sort": 1
            }
          ]
        }
      }
    },
    "sendMessageImage": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageText_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "UNIQUE_INSTAGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "parts": [
            {
              "id": "0",
              "contentType": "image/jpeg",
              "size": 36,
              "type": "image_link",
              "name": "file name",
              "data": "https://uibai.s3.eu-central-1.amazonaws.com/1603517259386",
              "sort": 1
            }
          ]
        }
      }
    },
    "sendMessageButton": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "$ref": "#/definitions/sendMessageButton_message"
        }
      },
      "example": {
        "message": {
          "sender": {
            "address": "test"
          },
          "receivers": [
            {
              "name": "Me",
              "address": "UNIQUE_INSTAGRAM_USER_ID",
              "Connector": "UNIQUE_CONNECTION_IDENTIFIER"
            }
          ],
          "subject": "",
          "parts": [
            {
              "id": "1",
              "contentType": "text/html",
              "data": "test",
              "size": 1000,
              "type": "body",
              "sort": 0
            },
            {
              "id": "2",
              "contentType": "text/plain",
              "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
              "size": 1000,
              "type": "quickreply",
              "sort": 1
            },
            {
              "id": "3",
              "contentType": "text/plain",
              "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
              "size": 1000,
              "type": "quickreply",
              "sort": 2
            },
            {
              "id": "4",
              "contentType": "text/plain",
              "data": "{\"title\":\"BUTTON_TITLE\",\"payload\":\"BUTTON_PAYLOAD\"}",
              "size": 1000,
              "type": "quickreply",
              "sort": 3
            }
          ]
        }
      }
    },
    "successMessage": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        }
      }
    },
    "inline_response_200": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        },
        "uri": {
          "type": "string",
          "example": "user://USER_ACCESSKEY:USER_ACCESSSECRET",
          "description": "User details"
        }
      }
    },
    "none": {
      "type": "object",
      "required": [
        "uri"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "example": "instagram://UNIQUE_UNIQUE_INSTAGRAM_USER_ID@instagram.com?isDirectMsg=true"
        },
        "name": {
          "type": "string",
          "example": "UNIQUE_CONNECTION_IDENTIFIER"
        }
      }
    },
    "inline_response_200_1": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        }
      }
    },
    "inline_response_200_2": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "example": 200,
          "description": "Status of Api"
        },
        "info": {
          "type": "string",
          "example": "200 OK",
          "description": "Info about status"
        },
        "URIs": {
          "type": "array",
          "description": "Send list",
          "items": {
            "type": "string",
            "example": "instagram://instagram.com/gBEGkYYGSIiAAgnzWjuGCt_OmyE"
          }
        }
      }
    },
    "sendMessageText_message_receivers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "Connector": {
          "type": "string"
        }
      }
    },
    "sendMessageText_message_parts": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contentType": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sort": {
          "type": "number"
        }
      }
    },
    "sendMessageText_message": {
      "type": "object",
      "properties": {
        "receivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_receivers"
          }
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_parts"
          }
        }
      }
    },
    "sendMessageButton_message": {
      "type": "object",
      "properties": {
        "receivers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_receivers"
          }
        },
        "subject": {
          "type": "string"
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/sendMessageText_message_parts"
          }
        }
      }
    }
  },
  "responses": {
    "UnauthorizedError": {
      "description": "Authentication required!"
    },
    "successMessage": {
      "description": "A User object",
      "schema": {
        "$ref": "#/definitions/successMessage"
      }
    }
  }
}